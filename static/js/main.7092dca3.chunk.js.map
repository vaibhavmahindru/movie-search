{"version":3,"sources":["movies.js","input.js","App.js","index.js"],"names":["movies","styles","height","className","src","this","props","movie","poster_path","alt","title","style","release_date","vote_average","overview","Component","input","state","query","searchMovie","e","a","preventDefault","url","fetch","response","json","data","console","log","results","setState","map","key","id","onSubmit","placeholder","name","type","value","onChange","target","role","aria-label","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sOAkCeA,E,4MA/BbC,OAAS,CACPC,OAAQ,S,uDAGR,OACE,yBAAKC,UAAU,QACb,yBACEA,UAAU,cACVC,IACmC,OAAjCC,KAAKC,MAAMC,MAAMC,YACb,wBADJ,0DAEuDH,KAAKC,MAAMC,MAAMC,aAE1EC,IAAKJ,KAAKC,MAAMC,MAAMG,MAAQ,UAC9BC,MAAwC,OAAjCN,KAAKC,MAAMC,MAAMC,YAAuBH,KAAKJ,OAAS,OAE/D,yBAAKE,UAAU,iBACb,wBAAIA,UAAU,eAAeE,KAAKC,MAAMC,MAAMG,OAC9C,uBAAGP,UAAU,gBACX,gDAAsBE,KAAKC,MAAMC,MAAMK,eAEzC,uBAAGT,UAAU,UACX,0CAAgBE,KAAKC,MAAMC,MAAMM,aAAjC,QAEF,uBAAGV,UAAU,cAAcE,KAAKC,MAAMC,MAAMO,gB,GAzBjCC,aCkDNC,E,4MAjDbC,MAAQ,CACNC,MAAO,GACPlB,OAAQ,I,uDAEA,IAAD,OACDmB,EAAW,uCAAG,WAAOC,GAAP,mBAAAC,EAAA,6DAClBD,EAAEE,iBAGIC,EAJY,kHAIqG,EAAKN,MAAMC,MAJhH,iDASOM,MAAMD,GATb,cASVE,EATU,gBAUGA,EAASC,OAVZ,OAUVC,EAVU,OAWhBC,QAAQC,IAAIF,EAAKG,SACjB,EAAKC,SAAS,CAAE/B,OAAQ2B,EAAKG,UAZb,kDAchBF,QAAQC,IAAR,MAdgB,0DAAH,sDAiBXtB,EAAQF,KAAKY,MAAMjB,OAAOgC,KAAI,SAACzB,GAAD,OAClC,kBAAC,EAAD,CAAQ0B,IAAK1B,EAAM2B,GAAI3B,MAAOA,OAEhC,OACE,oCACE,0BAAMJ,UAAU,OAAOgC,SAAUhB,GAC/B,2BACEhB,UAAU,QACViC,YAAY,mBACZC,KAAK,QACLC,KAAK,OACLC,MAAOlC,KAAKY,MAAMC,MAClBsB,SAAU,SAACpB,GAAD,OAAO,EAAKW,SAAS,CAAEb,MAAOE,EAAEqB,OAAOF,WAEnD,4BAAQD,KAAK,SAASnC,UAAU,UAC9B,0BAAMuC,KAAK,MAAMC,aAAW,UACzB,IADH,kBAMJ,yBAAKxC,UAAU,cAAcI,Q,GA5CjBQ,aCYL6B,G,6KATX,OACE,yBAAKzC,UAAU,aACb,sDACA,kBAAC,EAAD,W,GALUY,cCClB8B,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,U","file":"static/js/main.7092dca3.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nclass movies extends Component {\r\n  styles = {\r\n    height: \"250px\",\r\n  };\r\n  render() {\r\n    return (\r\n      <div className=\"card\">\r\n        <img\r\n          className=\"card--image\"\r\n          src={\r\n            this.props.movie.poster_path === null\r\n              ? \"/images/not-found.png\"\r\n              : `https://image.tmdb.org/t/p/w185_and_h278_bestv2/${this.props.movie.poster_path}`\r\n          }\r\n          alt={this.props.movie.title + \" poster\"}\r\n          style={this.props.movie.poster_path === null ? this.styles : null}\r\n        />\r\n        <div className=\"card--content\">\r\n          <h3 className=\"card--title\">{this.props.movie.title}</h3>\r\n          <p className=\"release-date\">\r\n            <small>Release Date: {this.props.movie.release_date}</small>\r\n          </p>\r\n          <p className=\"rating\">\r\n            <small>Rating: {this.props.movie.vote_average}/10</small>\r\n          </p>\r\n          <p className=\"card--desc\">{this.props.movie.overview}</p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default movies;\r\n","import React, { Component } from \"react\";\r\nimport Movies from \"./movies\";\r\nclass input extends Component {\r\n  state = {\r\n    query: \"\",\r\n    movies: [],\r\n  };\r\n  render() {\r\n    const searchMovie = async (e) => {\r\n      e.preventDefault();\r\n      //const query = \"Jurassic Park\";\r\n\r\n      const url = `https://api.themoviedb.org/3/search/movie?api_key=de70721a82fd944404b174a37aef7df3&language=en-US&query=${this.state.query}&page=1&include_adult=false`;\r\n\r\n      //const url2 = `http://www.omdbapi.com/?i=tt3896198&apikey=f1d1c7f9&t=${query}`;\r\n      //Another free movie api but not as useful as the first one as it has more movies\r\n      try {\r\n        const response = await fetch(url);\r\n        const data = await response.json();\r\n        console.log(data.results);\r\n        this.setState({ movies: data.results });\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    };\r\n    const movie = this.state.movies.map((movie) => (\r\n      <Movies key={movie.id} movie={movie} />\r\n    ));\r\n    return (\r\n      <>\r\n        <form className=\"form\" onSubmit={searchMovie}>\r\n          <input\r\n            className=\"input\"\r\n            placeholder=\"Search any movie\"\r\n            name=\"query\"\r\n            type=\"text\"\r\n            value={this.state.query}\r\n            onChange={(e) => this.setState({ query: e.target.value })}\r\n          />\r\n          <button type=\"submit\" className=\"button\">\r\n            <span role=\"img\" aria-label=\"search\">\r\n              {\" \"}\r\n              üîç\r\n            </span>\r\n          </button>\r\n        </form>\r\n        <div className=\"cards-list\">{movie}</div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default input;\r\n","import React, { Component } from \"react\";\nimport Input from \"./input\";\nimport \"./App.css\";\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"container\">\n        <header>React Movie Search</header>\n        <Input />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}